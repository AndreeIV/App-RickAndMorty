document.addEventListener("DOMContentLoaded",startApp);const app=document.getElementById("app"),buttons=document.querySelector("#buttons"),url="https://rickandmortyapi.com/api/character";let btnNext,btnPrevious,templateHtml;function startApp(){search(),select(),getApi(url)}const getCard=async(t,e)=>{document.querySelector(".container-search").classList.add("filter"),app.innerHTML="",buttons.innerHTML="";try{const n=await fetch(t),a=await n.json();console.log(a);const s="Male"==a.gender?'<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-mars" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#00abfb" fill="none" stroke-linecap="round" stroke-linejoin="round">\n        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>\n        <circle cx="10" cy="14" r="5" />\n        <line x1="19" y1="5" x2="13.6" y2="10.4" />\n        <line x1="19" y1="5" x2="14" y2="5" />\n        <line x1="19" y1="5" x2="19" y2="10" />\n        </svg>':'<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-venus" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#fd0061" fill="none" stroke-linecap="round" stroke-linejoin="round">\n        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>\n        <circle cx="12" cy="9" r="5" />\n        <line x1="12" y1="14" x2="12" y2="21" />\n        <line x1="9" y1="18" x2="15" y2="18" />\n    </svg>';templateHtml=`\n            <div class="card_character">\n                <h1 class="card_title">${a.name}</h1>\n                <img class="card_img" src="${a.image}">\n                <p class="card_created">Created: <span>${a.created}</span></p>\n                <h3 class="card_gender">Gender: <span style="color: ${"Male"==a.gender?"#00abfb":"#fd0061"}">${a.gender}</span> ${s}</h3>\n                <h3 class="card_status">Status: <span style="color: ${"Alive"==a.status?"green":"red"}">${"unknown"==a.status?"Â¿?":a.status}</span></h3>\n                <h3 class="card_specie">Specie: <span>${a.species}</span></h3>\n            </div>\n        `,btnBack=`\n            <button class="btns arrow-left" data-url="${e}">Back</button>\n        `,app.innerHTML=templateHtml,buttons.innerHTML=btnBack}catch(t){console.log(t)}},getApi=async t=>{document.querySelector(".container-search").classList.remove("filter");try{const e=await fetch(t),n=await e.json();console.log(n),console.log(url),dataApi(n.results),btnNext=n.info.next?`<button class="arrow-right btns" data-url="${n.info.next}"></button>`:"",btnPrevious=n.info.prev?`<button class="arrow-left btns" data-url="${n.info.prev}"></button>`:"",buttons.innerHTML=btnPrevious+" "+btnNext}catch(t){console.log(t)}},dataApi=async t=>{app.innerHTML="";try{for(let e of t){const t=await fetch(e.url),n=await t.json();templateHtml=`\n            <div class="articles" data-gender="${n.gender}" data-species="${n.species}" data-status="${n.status}"\n            data-url="${n.url}">\n            <img src="${n.image}" alt="${n.name}">\n            <h3>${n.name}</h3>\n            </div>\n            `,app.innerHTML+=templateHtml}}catch(t){console.log(t)}document.querySelectorAll(".articles").forEach((t=>{t.addEventListener("click",(t=>{const e=t.currentTarget.dataset.url;getCard(e,url)}))}))};buttons.addEventListener("click",(t=>{if(t.target.classList.contains("btns")){let e=t.target.dataset.url;getApi(e)}}));const search=()=>{document.querySelector("#search").addEventListener("input",(t=>{const e=t.target.value.toLowerCase();document.querySelectorAll(".articles").forEach((t=>{t.textContent.toLowerCase().includes(e)?t.classList.remove("filter"):t.classList.add("filter")}))}))},select=()=>{document.querySelector("#elmSelect").addEventListener("change",(t=>{const e=t.target.value,n=document.querySelectorAll(".articles");console.log(e),console.log(n),n.forEach((t=>{t.getAttribute("data-gender").toLowerCase()===e||t.getAttribute("data-status").toLowerCase()===e||t.getAttribute("data-species").toLowerCase()===e||"all"===e?t.classList.remove("filter"):t.classList.add("filter")}))}))};
//# sourceMappingURL=index.js.map
